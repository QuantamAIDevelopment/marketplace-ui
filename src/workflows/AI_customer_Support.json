{
  "name": "AI_customer_Support",
  "nodes": [
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.outputIndex }}",
                    "rightValue": 0,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    },
                    "id": "d540c175-383e-446e-b7ae-9c2dd40d5dd5"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "FAQ"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bc84ca2e-e622-4209-a2a3-28a9ebeec52b",
                    "leftValue": "={{ $json.outputIndex }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ORDER TRACKING"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "191993b6-196a-4213-ac8a-917307698d34",
                    "leftValue": "={{ $json.outputIndex }}",
                    "rightValue": 2,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ISSUE"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9ed5fb0d-30fc-4bc2-b9d4-7cabe92326e5",
                    "leftValue": "={{ $json.outputIndex }}",
                    "rightValue": 3,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Human Escalation"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -180,
        560
      ],
      "id": "80d6156a-3254-4784-9dde-9cc04ef4c6c8",
      "name": "Switch"
    },
    {
      "parameters": {
        "jsCode": "// Get the first input item (object)\nconst item = $input.first();\n// Get the chat input string\nconst query = item.json['message'].toLowerCase();\n\n// Initialize intent classification\nlet intent = \"\";\nlet output = -1; // Default to human escalation\n\nif (\n  query.includes(\"faq\") ||\n  query.includes(\"do you\") ||\n  query.includes(\"what is\") ||\n  query.includes(\"explain\") ||\n  query.includes(\"hi\")\n) {\n  intent = \"faq\";\n  output = 0;\n} else if (\n  query.includes(\"order status\") ||\n  query.includes(\"track my order\") ||\n  query.includes(\"order id\")\n) {\n  intent = \"order_tracking\";\n  output = 1;\n} else if (\n  query.includes(\"refund\") ||\n  query.includes(\"issue\") ||\n  query.includes(\"problem\") ||\n  query.includes(\"complaint\")\n) {\n  intent = \"issue\";\n  output = 2;\n}\nelse{\n  intent = \"unknown\"\n  output = 3\n}\n\nitem.json.recognizedIntent = intent;\nitem.json.outputIndex = output;\n\nreturn [item];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -420,
        580
      ],
      "id": "90a8a5d7-43b1-4683-8b8c-845ba1145efb",
      "name": "Code"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9eec3a59-5f80-4e73-a115-b9c34b6dfd2c",
              "name": "message",
              "value": "={{ $json.body.message }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -720,
        580
      ],
      "id": "6487b6ae-1045-40c6-b676-93758096a819",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message }}",
        "options": {
          "systemMessage": "=You are a helpful assistant with memory and knowledge capabilities.\n\n#FAQ Table (PostgreSQL)\nYou have access to a PostgreSQL database with a table named 'faq_table'. Your job is to query the 'question' and 'answer' columns for relevant information based on the input and return the answer as the output prompt."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        220,
        0
      ],
      "id": "b80dbcfd-b7ee-4dac-8822-5252f96badd8",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $workflow.id }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        300,
        200
      ],
      "id": "bcebe541-d37b-4252-a8bf-db24fafd68a9",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "jsCode": "// Get all input items\nconst items = $input.all();\n\n// Process each item and append orderId if found\nconst results = items.map(item => {\n  const inputText = $input.first().json.message;\n  const match = inputText && inputText.match(/\\b\\d{7}\\b/);\n  if (match) {\n    item.json.orderId = match[0];\n  } else {\n    item.json.orderId = null;\n  }\n  return item;\n});\n\nreturn results;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        120,
        500
      ],
      "id": "095b0b66-14e7-45fe-a8cc-bf998ca06bbc",
      "name": "Code1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b0dd735d-61e4-4d90-a65f-690715438896",
              "leftValue": "={{ $('Code1').item.json.orderId }}",
              "rightValue": "={{ $json.order_id }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        520,
        500
      ],
      "id": "c3d04c2e-5e7e-4ca6-ac60-b98ddb15675e",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM order_tracking WHERE order_id = '{{ $json.orderId }}'",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [
        320,
        500
      ],
      "id": "1f97b666-edd2-44da-8101-f68563e287d7",
      "name": "Postgres Order",
      "credentials": {
        "postgres": {
          "id": "ombHCedKDy5YY5fq",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Code1').item.json.message }}",
        "options": {
          "systemMessage": "=You are a helpful assistant with memory and knowledge capabilities.\n\n#Order Tracking (PostgreSQL)\nYou have access to a PostgreSQL database with a table named 'order_tracking'. Your job is to send a message to the user that their order status has been sent to their email."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        780,
        240
      ],
      "id": "c607bae0-fd93-47c8-9224-831bfbdd3b73",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('If').item.json.order_id }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        900,
        440
      ],
      "id": "da0a06a3-fd11-4627-9fed-012ff6a359e8",
      "name": "Simple Memory1"
    },
    {
      "parameters": {
        "sendTo": "={{ $('Postgres Order').item.json.gmail }}",
        "subject": "Track your order",
        "emailType": "text",
        "message": "={{ $('Postgres Order').item.json.status }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1160,
        240
      ],
      "id": "865c93f5-345e-4892-907e-5f77401c739f",
      "name": "Gmail",
      "webhookId": "f3feb0fe-1880-4d5b-ab44-8606ade98992",
      "credentials": {
        "gmailOAuth2": {
          "id": "Yzw60DakUdeHKqfQ",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        780,
        580
      ],
      "id": "4ca71dac-4a23-4e43-afa4-12e4864842d4",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "jsCode": "// Get all input items\nconst items = $input.all();\n\n// Process each item and append orderId if found\nconst results = items.map(item => {\n  const inputText = $input.first().json.message;\n  const match = inputText && inputText.match(/\\b\\d{7}\\b/);\n  if (match) {\n    item.json.orderId = match[0];\n  } else {\n    item.json.orderId = null;\n  }\n  return item;\n});\n\nreturn results;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        140,
        720
      ],
      "id": "c622400a-a8ae-48dc-9341-1ed5c910945e",
      "name": "Code2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "64af94ac-fb75-4758-9dcf-b344f72d30de",
              "leftValue": "={{ $('Code2').item.json.orderId }}",
              "rightValue": "={{ $json.order_id }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        560,
        900
      ],
      "id": "55696358-2333-4731-928d-cb593148483c",
      "name": "If1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Code2').item.json.message }}",
        "options": {
          "systemMessage": "=You are a helpful assistant with memory and knowledge capabilities.\n\n#Refund (Google Sheets)\nYou have access to a Google Sheets document. Your job is to get the information you need and send a message to the user that they will receive an email regarding the issue."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        880,
        720
      ],
      "id": "edc921ac-24f1-479d-a646-4c6b9a0698a5",
      "name": "AI Agent2"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $workflow.id }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        980,
        920
      ],
      "id": "de857c53-3aa5-435e-8cd7-5a1aef7b45b5",
      "name": "Simple Memory2"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "17YgQhJbBsi9HHlQ1dwj48Q2AT7Me52UPaxDUtrX-FsM",
          "mode": "list",
          "cachedResultName": "n8n-work-book",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/17YgQhJbBsi9HHlQ1dwj48Q2AT7Me52UPaxDUtrX-FsM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 901063992,
          "mode": "list",
          "cachedResultName": "ai_customer_support",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/17YgQhJbBsi9HHlQ1dwj48Q2AT7Me52UPaxDUtrX-FsM/edit#gid=901063992"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "output",
              "displayName": "output",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1240,
        720
      ],
      "id": "e8f83918-f9d4-4ef8-a612-28144b549c1a",
      "name": "Google Sheets Append",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "zEaLif2NVdOGF6k8",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "={{ $('Postgres Order1').item.json.gmail }}",
        "subject": "Regarding Your Order",
        "emailType": "text",
        "message": "=Hi,\nThanks for contacting AI customer support Agent.\nYou will receive a call from our agent within 2 hours from current time {{ $now }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1460,
        720
      ],
      "id": "2190686b-516d-4fcb-b55e-51b9824ffa64",
      "name": "Gmail1",
      "webhookId": "9a0bb2c5-9476-4e6e-8676-41c33dfa3876",
      "credentials": {
        "gmailOAuth2": {
          "id": "Yzw60DakUdeHKqfQ",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        860,
        1080
      ],
      "id": "38dabfde-3d5d-49e4-83fe-f450adbaf0d4",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        160,
        200
      ],
      "id": "fe16d1af-3946-4468-be21-de7eb3024539",
      "name": "Groq Chat Model",
      "credentials": {
        "groqApi": {
          "id": "1E3ZL2vIpcClZdxZ",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        760,
        440
      ],
      "id": "74ef13ab-547a-4534-b7a2-88615c48c7ef",
      "name": "Groq Chat Model1",
      "credentials": {
        "groqApi": {
          "id": "1E3ZL2vIpcClZdxZ",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        820,
        920
      ],
      "id": "9b77eb8e-bd03-4a25-9d0b-315b23e93ef7",
      "name": "Groq Chat Model2",
      "credentials": {
        "groqApi": {
          "id": "1E3ZL2vIpcClZdxZ",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "faq_table",
          "mode": "list",
          "cachedResultName": "faq_table"
        },
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        480,
        180
      ],
      "id": "78b9d387-ea98-420e-9295-55011a47f3ea",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "ombHCedKDy5YY5fq",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM order_tracking WHERE order_id = '{{ $json.orderId }}'",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [
        340,
        720
      ],
      "id": "6d5a3ccb-bec9-465d-87bc-634d9abb779d",
      "name": "Postgres Order1",
      "credentials": {
        "postgres": {
          "id": "ombHCedKDy5YY5fq",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        20,
        940
      ],
      "id": "7b170e8c-bc23-4c81-aeae-1192099af1f7",
      "name": "AI Agent3"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        40,
        1160
      ],
      "id": "24206e1e-d221-4f5c-aba1-3c776dd8380f",
      "name": "Groq Chat Model3",
      "credentials": {
        "groqApi": {
          "id": "1E3ZL2vIpcClZdxZ",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "welcome-message-001",
              "name": "chatResponse",
              "value": "=Welcome to AI Customer Support! Please use the following formats for your queries to get the best assistance:\n\n1. **General Questions (FAQs)**:\n   - Ask about our services, e.g., 'What is your return policy?' or 'Do you offer free shipping?'.\n   - Use words like 'what is', 'do you', 'explain', or 'hi' to get quick answers.\n   Example: 'Explain your loyalty program' or 'Hi, how can I contact support?'\n\n2. **Order Tracking**:\n   - Provide a 7-digit order ID, e.g., 'Track my order 1234567' or 'What is the order status of 7890123?'.\n   - Use phrases like 'order status', 'track my order', or 'order id'.\n\n3. **Issues or Refunds**:\n   - Mention your issue with an order ID, e.g., 'I have a problem with order 2348901' or 'I need a refund for 3459012'.\n   - Use words like 'refund', 'issue', 'problem', or 'complaint'.\n\n4. **Other Queries**:\n   - For anything else, describe your request clearly, e.g., 'I want to buy shoes'.\n   - We'll forward complex queries to our support team.\n\nHow can I assist you today?",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        380,
        1160
      ],
      "id": "db049e4e-bd10-4df1-beb1-ff417621fd3f",
      "name": "Send Welcome Message"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.3,
      "position": [
        560,
        1300
      ],
      "id": "10840947-8a19-4aaa-ae59-c8537700a9fc",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "chat",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1260,
        820
      ],
      "id": "7e8c3a3b-a9ec-42ed-bae1-3825c5a754d5",
      "name": "Webhook",
      "webhookId": "6edc357b-7df2-4ae7-a7d2-d9053b3ab2a6"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.3,
      "position": [
        1280,
        420
      ],
      "id": "b48d39a1-79be-491a-917d-85dadb7d2fe6",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.3,
      "position": [
        1480,
        920
      ],
      "id": "f2ab206c-6de9-4f54-8935-86992998d605",
      "name": "Respond to Webhook2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.3,
      "position": [
        660,
        0
      ],
      "id": "38e0eba2-cad5-4b60-b10b-50adb3928025",
      "name": "Respond to Webhook3"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.3,
      "position": [
        1160,
        1100
      ],
      "id": "8c09d7e8-6cac-4de6-b31e-f9ff4fffddea",
      "name": "Respond to Webhook4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "43949745-09c9-40ce-86ee-fbcd0de0d761",
              "leftValue": "= {{ $json.body.message.length }}",
              "rightValue": "0",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1040,
        820
      ],
      "id": "299d20de-9661-4de7-80b0-8daf3e6e8c10",
      "name": "If2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.3,
      "position": [
        520,
        1060
      ],
      "id": "bd13f966-ea72-49aa-a049-aa3c1aa2bbb2",
      "name": "Respond to Webhook5"
    }
  ],
  "pinData": {},
  "connections": {
    "Switch": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Postgres Order",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Order": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Gmail",
            "type": "main",
            "index": 0
          },
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Postgres Order1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory2": {
      "ai_memory": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets Append": {
      "main": [
        [
          {
            "node": "Gmail1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "Google Sheets Append",
            "type": "main",
            "index": 0
          },
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Order1": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Send Welcome Message": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail": {
      "main": [
        []
      ]
    },
    "Gmail1": {
      "main": [
        []
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "Respond to Webhook4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent3": {
      "main": [
        [
          {
            "node": "Respond to Webhook5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Welcome Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "254a12a9-3401-4bd2-99b1-7ab0923e2312",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "b49f74740e4a155f21338af76c2aa80263c734ce9c55ab82f1aa145d7b4ee228"
  },
  "id": "7yjr9syDYDhzf3EF",
  "tags": []
}