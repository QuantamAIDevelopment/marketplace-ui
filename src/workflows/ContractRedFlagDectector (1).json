import React, { useState } from "react";
import './ContractRedFlagDetectorForm.css'; // Optional: for custom styles

function ContractRedFlagDetectorForm() {
  const [docId, setDocId] = useState("");
  const [email, setEmail] = useState("");
  const [file, setFile] = useState(null);
  const [fileType, setFileType] = useState("doc");
  const [loading, setLoading] = useState(false);
  const [message, setMessage] = useState("");

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!file) {
      setMessage("Please select a file.");
      return;
    }
    setLoading(true);
    setMessage("");
    const formData = new FormData();
    formData.append("doc id", docId);
    formData.append("mail", email);
    formData.append("document", file);
    formData.append("document ends", fileType);

    try {
      const response = await fetch(
        "https://qaid-marketplace-ayf0bggnfxbyckg5.australiaeast-01.azurewebsites.net/webhook/contract",
        {
          method: "POST",
          body: formData,
        }
      );
      if (response.ok) {
        // Try to parse the plain text response into fields
        const text = await response.text();
        const lines = text.split('\n');
        const parsed = {};
        lines.forEach(line => {
          const [key, ...rest] = line.split(':');
          if (key && rest.length) {
            parsed[key.trim()] = rest.join(':').trim();
          }
        });
        setMessage(parsed);
      } else {
        setMessage("Submission failed. Please try again.");
      }
    } catch (err) {
      setMessage("An error occurred. Please try again.");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div style={{
      minHeight: '100vh',
      display: 'flex',
      flexDirection: 'column',
      alignItems: 'center',
      justifyContent: 'center',
      background: 'linear-gradient(120deg, #f8e1f4 0%, #cbe5ff 100%)',
      padding: '0',
    }}>
      <div style={{
        background: 'white',
        borderRadius: '20px',
        boxShadow: '0 4px 24px rgba(0,0,0,0.08)',
        padding: '40px 32px',
        maxWidth: '480px',
        width: '100%',
        marginTop: '40px',
      }}>
        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginBottom: 24 }}>
          <span style={{ fontSize: 48, color: '#ff4d4f', marginBottom: 8 }}>❗</span>
          <h1 style={{ fontWeight: 700, fontSize: 32, margin: 0, color: '#222' }}>Contract Red Flag Detector</h1>
          <h2 style={{ fontWeight: 500, fontSize: 20, margin: '8px 0 0 0', color: '#444' }}>Contract Red Flag Detector</h2>
          <p style={{ color: '#666', marginTop: 8, textAlign: 'center' }}>
            Upload a contract to detect red flags, assess risk, and get suggestions to fix issues.
          </p>
        </div>
        <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: 16 }}>
          <input
            type="text"
            placeholder="Document Name"
            value={docId}
            onChange={(e) => setDocId(e.target.value)}
            required
            style={{
              padding: '12px',
              borderRadius: '8px',
              border: '1px solid #ccc',
              fontSize: '16px',
            }}
          />
          <input
            type="email"
            placeholder="Your Email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            required
            style={{
              padding: '12px',
              borderRadius: '8px',
              border: '1px solid #ccc',
              fontSize: '16px',
            }}
          />
          <input
            type="file"
            accept=".pdf,.doc,.docx"
            onChange={(e) => setFile(e.target.files[0])}
            required
            style={{
              padding: '8px',
              borderRadius: '8px',
              border: '1px solid #ccc',
              background: '#f9f9f9',
            }}
          />
          <input
            type="text"
            placeholder="doc"
            value={fileType}
            onChange={(e) => setFileType(e.target.value)}
            required
            style={{
              padding: '12px',
              borderRadius: '8px',
              border: '1px solid #ccc',
              fontSize: '16px',
            }}
          />
          <button
            type="submit"
            disabled={loading}
            style={{
              marginTop: 8,
              padding: '14px 0',
              borderRadius: '8px',
              border: 'none',
              background: 'linear-gradient(90deg, #ff6a00 0%, #ffb347 100%)',
              color: 'white',
              fontWeight: 700,
              fontSize: '18px',
              cursor: loading ? 'not-allowed' : 'pointer',
              transition: 'background 0.2s',
              boxShadow: '0 2px 8px rgba(255,106,0,0.08)'
            }}
          >
            {loading ? 'Analyzing...' : 'Analyze Contract'}
          </button>
          {message && (typeof message === 'string' ? (
            <div style={{ color: message.includes('success') ? 'green' : 'red', marginTop: 8 }}>{message}</div>
          ) : (
            <div style={{ marginTop: 16, background: '#f6f6f6', borderRadius: 8, padding: 16 }}>
              <div><b>Upload time:</b> {message['Upload time'] ? new Date(message['Upload time']).toLocaleString() : 'N/A'}</div>
              <div><b>User:</b> {message['User'] || 'N/A'}</div>
              <div><b>Document Name:</b> {message['Document Name'] || 'N/A'}</div>
              <div><b>Number of redflags:</b> {message['Number of redflags'] && message['Number of redflags'] !== 'N/A'
                ? message['Number of redflags']
                : (message['Suggestion to fix']
                    ? message['Suggestion to fix'].split(/,|\n|•/).filter(s => s.trim()).length
                    : 'N/A')
              }</div>
              <div><b>Overall risk:</b> {message['Overall risk'] || 'N/A'}</div>
              <div><b>Suggestion to fix:</b> {message['Suggestion to fix'] ? (
                <ul style={{ marginLeft: 24 }}>
                  {message['Suggestion to fix'].split(',').map((s, i) => <li key={i}>{s.trim()}</li>)}
                </ul>
              ) : 'N/A'}</div>
            </div>
          ))}
        </form>
      </div>
    </div>
  );
}

export default ContractRedFlagDetectorForm;