{
  "name": "Leave balance chatbot agent",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c0299563-a85e-42ae-b4c1-7c55da94c0cd",
              "name": "subject",
              "value": "={{ $json.body.Subject }}",
              "type": "string"
            },
            {
              "id": "41164c10-2bbb-4316-96c3-3488b69b85bd",
              "name": "text",
              "value": "={{ $json.body.snippet }}",
              "type": "string"
            },
            {
              "id": "0e133cae-b6e9-4261-83c0-52f3fd617c80",
              "name": "email",
              "value": "={{ $json.body.From }}",
              "type": "string"
            },
            {
              "id": "2f89a409-3404-4226-839e-ee59d01f6369",
              "name": "Date",
              "value": "={{ $json.body.internalDate }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1800,
        440
      ],
      "id": "8fb58416-df62-4c87-b6ae-da58346150f4",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "jsCode": "const data = $json;\n\nconst casualUsed = data[\"Casual Leave used\"] || 0;\nconst sickUsed = data[\"Sick Leave Used\"] || 0;\nconst casualTotal = data[\"Casual Leave Total\"] || 0;\nconst sickTotal = data[\"Sick Leave Total\"] || 0;\n\nconst totalLeavesUsed = casualUsed + sickUsed;\nconst remainingCasualLeaves = casualTotal - casualUsed;\nconst remainingSickLeaves = sickTotal - sickUsed;\nconst remainingTotalLeaves = remainingCasualLeaves + remainingSickLeaves;\n\nreturn [{\n  json: {\n    email: data[\"Email\"],\n    employee_id: data[\"Employee_id\"],\n    casual_leave_total: casualTotal,\n    casual_leave_used: casualUsed,\n    sick_leave_total: sickTotal,\n    sick_leave_used: sickUsed,\n    total_leaves_used: totalLeavesUsed,\n    remaining_casual_leaves: remainingCasualLeaves,\n    remaining_sick_leaves: remainingSickLeaves,\n    remaining_total_leaves: remainingTotalLeaves\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -540,
        320
      ],
      "id": "2923102a-23cf-482f-8161-df30ff742063",
      "name": "Code"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d01c4c63-2bac-435a-9564-22ca601045c8",
              "leftValue": "={{ $json.Employee_id }}",
              "rightValue": "leave",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "looseTypeValidation": "=",
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -820,
        440
      ],
      "id": "c4751c0d-92b0-4870-b3a1-8449a279bc86",
      "name": "If"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You are an intent classification AI.\n\nUser message: \"{{ $json.text }}\"\nUser email: \"{{ $json[\"email\"] }}\"\n\nClassify the intent as one of:\n- \"check_leave_balance\"\n- \"other\"\n\nReturn result in the following JSON format:\n{\n  \"email\": \"{{ $json[\"email\"] }}\",\n  \"intent\": \"check_leave_balance\"  // or \"other\"\n}\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -1380,
        440
      ],
      "id": "849e74f1-1f22-4f90-90b5-e209eb79bfb2",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "aYPK5cOgw1WyrlUe",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nconst updatedItems = items.map((item) => {\n  // Try to get the internalDate from current item\n  const timestampMillis = item.json.internalDate;\n\n  // Use internalDate if available, otherwise fallback to current time\n  const date = new Date(Number(timestampMillis || Date.now()));\n\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n\n  // Add formatted date to item\n  item.json.Date = `${year}-${month}-${day}`;\n\n  return item;\n});\n\nreturn updatedItems;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1580,
        440
      ],
      "id": "f2ba72e4-6af2-4a2c-af9f-302dde9c7968",
      "name": "Code1"
    },
    {
      "parameters": {
        "sendTo": "={{ $json['Email '] }}",
        "subject": "Leave Balance",
        "emailType": "text",
        "message": "=Hello ðŸ‘‹, hereâ€™s your current leave balance:\n\nðŸ“§ Email: {{ $json['Email '] }}\nðŸ†” Employee ID: {{ $json.Employee_id }}\n\nðŸŸ¢ Casual Leaves Remaining:  {{ $json['Remaining Causal leaves'] }}\nðŸŸ¡ Sick Leaves Remaining: {{ $json['Remaining Sick Leaves'] }}\nðŸ“Š Total Leaves Used: {{ $json['Total leaves used'] }}\nðŸ“˜ Total Remaining Leaves: {{ $json['Remaining Leaves'] }}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -80,
        320
      ],
      "id": "f5672971-74b7-45b1-bcfc-0a10573cc6e2",
      "name": "Gmail",
      "webhookId": "12b354d4-6cb4-40ed-be11-4bddfd8e2d40",
      "credentials": {
        "gmailOAuth2": {
          "id": "mxrA4n6IaRAaZeF8",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "={{ $json['Email '] }}",
        "subject": "Leave balance data",
        "emailType": "text",
        "message": "=Sorry, we couldnâ€™t find leave details for the provided email or employee ID.\n\nPlease double-check the information and try again.  \nIf the issue persists, contact HR for assistance.\n",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -520,
        580
      ],
      "id": "20d7f571-2cba-41b1-bbf7-f1ce47a2743b",
      "name": "Gmail1",
      "webhookId": "d4bae13c-3875-4d3a-b845-7936dd52ef8d",
      "credentials": {
        "gmailOAuth2": {
          "id": "mxrA4n6IaRAaZeF8",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "leaves_Post",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2040,
        440
      ],
      "id": "bc915e3d-d7f8-48ef-916e-e97c7a7199cd",
      "name": "Webhook",
      "webhookId": "cbbf59f7-daed-4a40-883c-3f8e795c2b20"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1NcHbJ7B_lrCmjSdNp5VF3O2bBFLDdj1HC2yH_1B7TWI",
          "mode": "list",
          "cachedResultName": "leave balance chatbot agent",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1NcHbJ7B_lrCmjSdNp5VF3O2bBFLDdj1HC2yH_1B7TWI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ek3e8reP6PSAxsviEI3Huj7jpit0DO3DigpeSqwaqZc/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Email ",
              "lookupValue": "={{ $json.message.content.email }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -1020,
        440
      ],
      "id": "b46eadcd-4ad8-48b6-8c81-0a0ac29f98ae",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "kmmF72fLG9pg4goo",
          "name": "Google Sheets account 3"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.3,
      "position": [
        -120,
        20
      ],
      "id": "48a3b6da-e3d2-4163-a238-49e65f965afd",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1NcHbJ7B_lrCmjSdNp5VF3O2bBFLDdj1HC2yH_1B7TWI",
          "mode": "list",
          "cachedResultName": "leave balance chatbot agent",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1NcHbJ7B_lrCmjSdNp5VF3O2bBFLDdj1HC2yH_1B7TWI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 471696796,
          "mode": "list",
          "cachedResultName": "Sheet2",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1NcHbJ7B_lrCmjSdNp5VF3O2bBFLDdj1HC2yH_1B7TWI/edit#gid=471696796"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Employee_id": "={{ $json.employee_id }}",
            "Email ": "={{ $('If').item.json['Email '] }}",
            "Total leaves used": "={{ $json.total_leaves_used }}",
            "Remaining Causal leaves": "={{ $json.remaining_casual_leaves }}",
            "Remaining Sick Leaves": "={{ $json.remaining_sick_leaves }}",
            "Remaining Leaves": "={{ $json.remaining_total_leaves }}",
            "timestamp": "={{ $('Code1').item.json.Date }}"
          },
          "matchingColumns": [
            "Employee_id"
          ],
          "schema": [
            {
              "id": "Employee_id",
              "displayName": "Employee_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Email ",
              "displayName": "Email ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Total leaves used",
              "displayName": "Total leaves used",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Remaining Leaves",
              "displayName": "Remaining Leaves",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Remaining Causal leaves",
              "displayName": "Remaining Causal leaves",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Remaining Sick Leaves",
              "displayName": "Remaining Sick Leaves",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "timestamp",
              "displayName": "timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -320,
        320
      ],
      "id": "d61f174b-1d92-489a-9848-21bd8b730be6",
      "name": "Google Sheets1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "kmmF72fLG9pg4goo",
          "name": "Google Sheets account 3"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gmail1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets1": {
      "main": [
        [
          {
            "node": "Gmail",
            "type": "main",
            "index": 0
          },
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "353e503e-9a01-41f7-89e8-bf3d2817ce65",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "4da3e4feddd42df58fa861bd27ff786155b680eb2d7948e126da15f5d08ab036"
  },
  "id": "hpa6IskQMKc2nKPD",
  "tags": []
}